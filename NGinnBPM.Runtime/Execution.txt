Działanie


1. Composite task
w momencie enablowania tworzy 'transakcję' która obejmuje wszystkie utworzone w niej zadania potomne.
Wykonujemy je dotąd, dopóki jeszcze coś można zrobić.
w ramach tej transakcji komunikacja parent <-> child jest synchroniczna.
...
a co z naszym zadaniem nadrzędnym? O ile ono zapoczątkowało transakcję, to też synchroniczna.
Jeśli to my zapoczątkowaliśmy transakcję, to async.
niech composite określa czy w nim jest sync czy async...

Poza enablowaniem, później nie ma już chyba takich sytuacji że musimy wszystko zrobić synchronicznie.

2. Composite task - późniejsze zdarzenia (np. zmiany w zadaniach potomnych) są obsługiwane 